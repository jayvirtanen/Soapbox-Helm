{"version":3,"file":"packs/js/features/list_timeline-101219dc7d7a9c6e2964.chunk.js","mappings":"+JAAiIA,E,omBAA8uBC,GAAS,QAAe,CAACC,cAAc,CAAC,GAAK,oCAAoC,eAAiB,eAAeC,cAAc,CAAC,GAAK,oCAAoC,eAAiB,0DAA0DC,cAAc,CAAC,GAAK,oCAAoC,eAAiB,YACrqCC,GAAmB,SADorC,SAACC,EAAMC,GAAQ,OAAEC,KAAKF,EAAMG,MAAM,CAAC,QAAQF,EAAMG,OAAOC,QACntCC,CAAKZ,GAAO,QAAWA,GAAO,QAAWA,EAAM,YAAgD,a,IAAY,sDAAZ,mBAA8Ba,IAAI,K,OAAE,OAAgB,EAAK,kBAAiB,SAAAC,GAAc,IAAAH,EAAI,EAAKJ,MAAMG,OAAM,GAAC,EAAKH,MAAMQ,UAAS,QAAmBJ,EAAG,CAACG,MAAK,SAAO,OAAgB,EAAK,mBAAkB,WAAK,EAAKP,MAAMQ,UAAS,QAAU,cAAc,CAACC,OAAO,EAAKT,MAAMG,OAAOC,UAAS,OAAgB,EAAK,qBAAoB,WAAU,MAAgB,EAAKJ,MAApBQ,EAAQ,WAACE,EAAI,OAAmBN,EAAI,EAAKJ,MAAMG,OAAM,GAACK,GAAS,QAAU,UAAU,CAACG,KAAK,EAAQ,IAAiCC,QAAQF,EAAKG,cAAcnB,EAASC,eAAemB,QAAQJ,EAAKG,cAAcnB,EAASE,eAAemB,QAAQL,EAAKG,cAAcnB,EAASG,eAAemB,UAAU,WAAKR,GAAS,QAAWJ,IAAK,EAAKJ,MAAMiB,QAAQC,KAAK,iB,EAA2gD,OAA9sE,OAAstB,YAAAC,kBAAA,WAAoBC,KAAKC,cAAcD,KAAKpB,MAAMG,OAAOC,KAAK,YAAAkB,qBAAA,WAAuBF,KAAKG,oBAAoB,YAAAC,mBAAA,SAAmBC,GAAcL,KAAKpB,MAAMG,OAAOC,KAAKqB,EAAUtB,OAAOC,KAAIgB,KAAKG,mBAAmBH,KAAKC,cAAcD,KAAKpB,MAAMG,OAAOC,MAAM,YAAAiB,cAAA,SAAcjB,GAAU,IAAAI,EAAUY,KAAKpB,MAAK,SAACQ,GAAS,QAAUJ,IAAKI,GAAS,QAAmBJ,IAAKgB,KAAKM,WAAWlB,GAAS,QAAkBJ,KAAM,YAAAmB,iBAAA,WAAsBH,KAAKM,aAAYN,KAAKM,aAAaN,KAAKM,WAAW,OAAO,YAAAC,OAAA,WAAe,IAAA1B,EAAMmB,KAAKpB,MAAK,KAAOI,EAAIgB,KAAKpB,MAAMG,OAAM,GAAOyB,EAAM3B,EAAKA,EAAK4B,IAAI,SAASzB,EAAG,QAAiB,IAAPH,EAAoB,OAAmB,OAAK,IAAO,QAAG,GAAoB,OAAK,MAAM,QAAG,GAAoB,OAAK,IAAiB,MAAY,IAAU,IAAPA,EAAc,OAAmB,OAAK,IAAO,QAAG,GAAoB,OAAK,IAAiB,KAAM,IAAM6B,GAA0B,OAAK,MAAM,QAAG,GAAoB,OAAK,IAAiB,CAAC1B,GAAG,oBAAoB2B,eAAe,2GAAuH,OAAK,KAAK,KAAiB,OAAK,KAAK,KAAiB,OAAK,IAAO,CAACC,QAAQZ,KAAKa,sBAAiB,GAAoB,OAAK,IAAiB,CAAC7B,GAAG,oBAAoB2B,eAAe,+BAA+B,OAAmB,OAAK,IAAO,CAACG,MAAMN,EAAMhB,QAAQgB,EAAMO,aAAY,QAAM,GAAoB,OAAK,IAAoB,CAACC,UAAU,gBAAgBC,WAAW,QAAQC,OAAOlC,GAAImC,WAAWnB,KAAKoB,eAAeV,aAAaA,MAAiB,EAA1uE,CAA4B,mBAAktErC,IAASA,IAASA","sources":["webpack://soapbox-fe/./app/soapbox/features/list_timeline/index.js"],"sourcesContent":["import _jsx from\"@babel/runtime/helpers/esm/jsx\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";var _dec,_class;import\"core-js/modules/web.dom-collections.iterator.js\";import React from'react';import{FormattedMessage,defineMessages,injectIntl}from'react-intl';import{connect}from'react-redux';import{withRouter}from'react-router-dom';import Button from'soapbox/components/button';import Column from'soapbox/features/ui/components/column';import{fetchList,deleteList}from'../../actions/lists';import{openModal}from'../../actions/modals';import{connectListStream}from'../../actions/streaming';import{expandListTimeline}from'../../actions/timelines';import LoadingIndicator from'../../components/loading_indicator';import MissingIndicator from'../../components/missing_indicator';import StatusListContainer from'../ui/containers/status_list_container';const messages=defineMessages({deleteHeading:{\"id\":\"confirmations.delete_list.heading\",\"defaultMessage\":\"Delete list\"},deleteMessage:{\"id\":\"confirmations.delete_list.message\",\"defaultMessage\":\"Are you sure you want to permanently delete this list?\"},deleteConfirm:{\"id\":\"confirmations.delete_list.confirm\",\"defaultMessage\":\"Delete\"}});const mapStateToProps=(state,props)=>({list:state.getIn(['lists',props.params.id])// hasUnread: state.getIn(['timelines', `list:${props.params.id}`, 'unread']) > 0,\n});let ListTimeline=(_dec=connect(mapStateToProps),_dec(_class=injectIntl(_class=withRouter(_class=class ListTimeline extends React.PureComponent{constructor(...args){super(...args);_defineProperty(this,\"handleLoadMore\",maxId=>{const{id}=this.props.params;this.props.dispatch(expandListTimeline(id,{maxId}));});_defineProperty(this,\"handleEditClick\",()=>{this.props.dispatch(openModal('LIST_EDITOR',{listId:this.props.params.id}));});_defineProperty(this,\"handleDeleteClick\",()=>{const{dispatch,intl}=this.props;const{id}=this.props.params;dispatch(openModal('CONFIRM',{icon:require('@tabler/icons/icons/trash.svg'),heading:intl.formatMessage(messages.deleteHeading),message:intl.formatMessage(messages.deleteMessage),confirm:intl.formatMessage(messages.deleteConfirm),onConfirm:()=>{dispatch(deleteList(id));this.props.history.push('/lists');}}));});}componentDidMount(){this.handleConnect(this.props.params.id);}componentWillUnmount(){this.handleDisconnect();}componentDidUpdate(prevProps){if(this.props.params.id!==prevProps.params.id){this.handleDisconnect();this.handleConnect(this.props.params.id);}}handleConnect(id){const{dispatch}=this.props;dispatch(fetchList(id));dispatch(expandListTimeline(id));this.disconnect=dispatch(connectListStream(id));}handleDisconnect(){if(this.disconnect){this.disconnect();this.disconnect=null;}}render(){const{list}=this.props;const{id}=this.props.params;const title=list?list.get('title'):id;if(typeof list==='undefined'){return/*#__PURE__*/_jsx(Column,{},void 0,/*#__PURE__*/_jsx(\"div\",{},void 0,/*#__PURE__*/_jsx(LoadingIndicator,{})));}else if(list===false){return/*#__PURE__*/_jsx(Column,{},void 0,/*#__PURE__*/_jsx(MissingIndicator,{}));}const emptyMessage=/*#__PURE__*/_jsx(\"div\",{},void 0,/*#__PURE__*/_jsx(FormattedMessage,{id:\"empty_column.list\",defaultMessage:\"There is nothing in this list yet. When members of this list create new posts, they will appear here.\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{onClick:this.handleEditClick},void 0,/*#__PURE__*/_jsx(FormattedMessage,{id:\"list.click_to_add\",defaultMessage:\"Click here to add people\"})));return/*#__PURE__*/_jsx(Column,{label:title,heading:title,transparent:true},void 0,/*#__PURE__*/_jsx(StatusListContainer,{scrollKey:\"list_timeline\",timelineId:\"list:\".concat(id),onLoadMore:this.handleLoadMore,emptyMessage:emptyMessage}));}})||_class)||_class)||_class);export{ListTimeline as default};"],"names":["_class","messages","deleteHeading","deleteMessage","deleteConfirm","ListTimeline","state","props","list","getIn","params","id","_dec","args","maxId","dispatch","listId","intl","icon","heading","formatMessage","message","confirm","onConfirm","history","push","componentDidMount","this","handleConnect","componentWillUnmount","handleDisconnect","componentDidUpdate","prevProps","disconnect","render","title","get","emptyMessage","defaultMessage","onClick","handleEditClick","label","transparent","scrollKey","timelineId","concat","onLoadMore","handleLoadMore"],"sourceRoot":""}