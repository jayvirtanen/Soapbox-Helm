{"version":3,"file":"packs/js/features/chats/chat_room-489fff5225aec5d906d1.chunk.js","mappings":"+JAA4HA,ECAK,EAAOC,EAAQC,E,mmBDAoMC,GAAiB,QAAWH,EAAM,YAAoD,a,IAAY,sDAAZ,mBAA8BI,IAAI,K,OAAE,OAAgB,EAAK,eAAc,WAAK,IAAIC,EAAsBC,EAAI,EAAKC,MAAK,GAAwG,KAAhE,QAAlCF,EAAgBG,OAAOC,eAAmC,IAAlBJ,OAAyB,EAAOA,EAAgBK,QAAa,EAAKH,MAAME,QAAQE,KAAKL,GAAM,KAAW,EAAKC,MAAME,QAAQG,aAAa,OAAgB,EAAK,eAAc,SAAAC,GAAe,UAARA,EAAEC,KAAe,EAAKC,iB,EAAoV,OAAhtB,OAA+Y,YAAAC,OAAA,WAAS,OAAmB,OAAK,SAAS,CAACC,QAAQC,KAAKH,YAAYI,QAAQD,KAAKE,YAAYC,UAAU,2BAAsB,GAAoB,OAAK,IAAK,CAACC,GAAG,eAAeD,UAAU,2BAA2BE,YAAW,KAAoB,OAAK,IAAiB,CAACD,GAAG,2BAA2BE,eAAe,WAAW,EAAhvB,CAAgC,mBAAotBxB,E,4fCAgCyB,GAAe,SAAnO,SAACC,EAAM,G,IAACC,EAAM,SAAWC,GAAQ,UAAoBC,EAAKH,EAAMI,MAAM,CAAC,QAAQ,QAAQH,EAAOI,SAAQ,YAAgBC,OAAO,MAAM,CAACC,GAAGP,EAAMQ,IAAI,MAAML,KAAKD,EAAQF,EAAMG,GAAMM,YAAW,QAAWT,MAAsDU,CAAK,GAAO,EAAAC,EAAA,KAAmBnC,EAAMD,EAAO,YAA+C,a,IAAY,sDAAZ,mBAA8BG,IAAI,K,OAAE,OAAgB,EAAK,kBAAiB,SAAAkC,GAAK,EAAKC,UAAUD,EAAG,EAAKE,iBAAgB,OAAgB,EAAK,cAAa,WAAS,EAAKD,WAAiB,EAAKA,UAAUE,YAAW,OAAgB,EAAK,YAAW,WAAU,MAAgB,EAAKlC,MAApBmC,EAAQ,WAACb,EAAI,OAAiBA,GAAYa,GAAS,QAAab,EAAKK,IAAI,W,EAAs1B,OAAlrC,OAAwW,YAAAS,kBAAA,WAAyB,MAAkBzB,KAAKX,MAAtBmC,EAAQ,WAACf,EAAM,SAAae,GAAS,QAAUf,EAAOI,SAASb,KAAK0B,YAAY,YAAAC,mBAAA,SAAmBC,GAAnB,WAAuD,CAAC,WAAI,SAAKvC,MAAMsB,MAAK,WAAI,SAAKtB,MAAMsB,KAAKK,IAAI,UAAU,IAAyBa,OAAM,SAAAC,GAAG,OAAAA,QAAK9B,KAAK0B,YAAY,YAAA5B,OAAA,WAAc,MAAkBE,KAAKX,MAAtBsB,EAAI,OAACM,EAAU,aAAa,IAAIN,EAAK,OAAO,KAAK,IAAMoB,EAAQpB,EAAKK,IAAI,WAAW,OAAmB,OAAK,IAAO,QAAG,GAAoB,OAAK,MAAM,CAACb,UAAU,uBAAkB,GAAoB,OAAKlB,EAAiB,KAAiB,OAAK,KAAK,CAACG,GAAG,KAAK4C,OAAOD,EAAQf,IAAI,SAASb,UAAU,yBAAoB,GAAoB,OAAK,IAAO,CAAC4B,QAAQA,EAAQE,KAAK,MAAkB,OAAK,MAAM,CAAC9B,UAAU,wBAAmB,EAAO,KAAI,QAAQ4B,EAAQd,OAA4B,OAAK,IAAQ,CAACJ,OAAOF,EAAKK,IAAI,MAAMkB,cAAclC,KAAKmC,mBAAmB,EAA1sC,CAAwB,OAAorC,OAAgBpD,EAAQ,YAAY,CAACyC,SAAS,oBAA0BY,KAAK,sBAA4BzB,KAAK,QAAuBM,WAAW,SAAeF,GAAG,WAAn4C,EAAo5C/B,KAAS,IAAS","sources":["webpack://soapbox-fe/./app/soapbox/components/column_back_button.js","webpack://soapbox-fe/./app/soapbox/features/chats/chat_room.js"],"sourcesContent":["import _jsx from\"@babel/runtime/helpers/esm/jsx\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";var _class;import\"core-js/modules/web.dom-collections.iterator.js\";import React from'react';import{FormattedMessage}from'react-intl';import{withRouter}from'react-router-dom';import Icon from'soapbox/components/icon';let ColumnBackButton=withRouter(_class=class ColumnBackButton extends React.PureComponent{constructor(...args){super(...args);_defineProperty(this,\"handleClick\",()=>{var _window$history;const{to}=this.props;if(((_window$history=window.history)===null||_window$history===void 0?void 0:_window$history.length)===1){this.props.history.push(to?to:'/');}else{this.props.history.goBack();}});_defineProperty(this,\"handleKeyUp\",e=>{if(e.key==='Enter'){this.handleClick();}});}render(){return/*#__PURE__*/_jsx(\"button\",{onClick:this.handleClick,onKeyUp:this.handleKeyUp,className:\"column-back-button\"},void 0,/*#__PURE__*/_jsx(Icon,{id:\"chevron-left\",className:\"column-back-button__icon\",fixedWidth:true}),/*#__PURE__*/_jsx(FormattedMessage,{id:\"column_back_button.label\",defaultMessage:\"Back\"}));}})||_class;export{ColumnBackButton as default};","import _jsx from\"@babel/runtime/helpers/esm/jsx\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";var _dec,_class,_class2,_temp;import\"core-js/modules/web.dom-collections.iterator.js\";import{Map as ImmutableMap}from'immutable';import PropTypes from'prop-types';import React from'react';import ImmutablePropTypes from'react-immutable-proptypes';import ImmutablePureComponent from'react-immutable-pure-component';import{injectIntl}from'react-intl';import{connect}from'react-redux';import{Link}from'react-router-dom';import{fetchChat,markChatRead}from'soapbox/actions/chats';import Avatar from'soapbox/components/avatar';import Column from'soapbox/components/column';import ColumnBackButton from'soapbox/components/column_back_button';import{makeGetChat}from'soapbox/selectors';import{getAcct}from'soapbox/utils/accounts';import{displayFqn}from'soapbox/utils/state';import ChatBox from'./components/chat_box';const mapStateToProps=(state,{params})=>{const getChat=makeGetChat();const chat=state.getIn(['chats','items',params.chatId],ImmutableMap()).toJS();return{me:state.get('me'),chat:getChat(state,chat),displayFqn:displayFqn(state)};};let ChatRoom=(_dec=connect(mapStateToProps),_dec(_class=injectIntl(_class=(_temp=_class2=class ChatRoom extends ImmutablePureComponent{constructor(...args){super(...args);_defineProperty(this,\"handleInputRef\",el=>{this.inputElem=el;this.focusInput();});_defineProperty(this,\"focusInput\",()=>{if(!this.inputElem)return;this.inputElem.focus();});_defineProperty(this,\"markRead\",()=>{const{dispatch,chat}=this.props;if(!chat)return;dispatch(markChatRead(chat.get('id')));});}componentDidMount(){const{dispatch,params}=this.props;dispatch(fetchChat(params.chatId));this.markRead();}componentDidUpdate(prevProps){const markReadConditions=[()=>this.props.chat,()=>this.props.chat.get('unread')>0];if(markReadConditions.every(c=>c()))this.markRead();}render(){const{chat,displayFqn}=this.props;if(!chat)return null;const account=chat.get('account');return/*#__PURE__*/_jsx(Column,{},void 0,/*#__PURE__*/_jsx(\"div\",{className:\"chatroom__back\"},void 0,/*#__PURE__*/_jsx(ColumnBackButton,{}),/*#__PURE__*/_jsx(Link,{to:\"/@\".concat(account.get('acct')),className:\"chatroom__header\"},void 0,/*#__PURE__*/_jsx(Avatar,{account:account,size:18}),/*#__PURE__*/_jsx(\"div\",{className:\"chatroom__title\"},void 0,\"@\",getAcct(account,displayFqn)))),/*#__PURE__*/_jsx(ChatBox,{chatId:chat.get('id'),onSetInputRef:this.handleInputRef}));}},_defineProperty(_class2,\"propTypes\",{dispatch:PropTypes.func.isRequired,intl:PropTypes.object.isRequired,chat:ImmutablePropTypes.map,displayFqn:PropTypes.bool,me:PropTypes.node}),_temp))||_class)||_class);export{ChatRoom as default};"],"names":["_class","_class2","_temp","ColumnBackButton","args","_window$history","to","props","window","history","length","push","goBack","e","key","handleClick","render","onClick","this","onKeyUp","handleKeyUp","className","id","fixedWidth","defaultMessage","ChatRoom","state","params","getChat","chat","getIn","chatId","toJS","me","get","displayFqn","_dec","injectIntl","el","inputElem","focusInput","focus","dispatch","componentDidMount","markRead","componentDidUpdate","prevProps","every","c","account","concat","size","onSetInputRef","handleInputRef","intl"],"sourceRoot":""}