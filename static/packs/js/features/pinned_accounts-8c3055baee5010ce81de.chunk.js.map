{"version":3,"file":"packs/js/features/pinned_accounts-8c3055baee5010ce81de.chunk.js","mappings":"irBAA2lB,2B,+CAA4/B,OAA19B,OAAuB,YAAAA,kBAAA,WAAoBC,KAAKC,MAAMC,eAAe,YAAAC,OAAA,WAAe,IAAAC,EAASJ,KAAKC,MAAK,QAAOI,EAAOL,KAAKC,MAAMI,OAAOC,MAAM,EAAEN,KAAKC,MAAMM,OAAO,OAAGF,EAAOG,UAAkB,MAAyB,OAAK,MAAM,CAACC,UAAU,kBAAa,GAAoB,OAAK,MAAM,CAACA,UAAU,yBAAoB,GAAoB,OAAK,IAAK,CAACC,IAAI,EAAQ,KAAiCD,UAAU,4BAAwC,OAAK,OAAO,CAACA,UAAU,gCAA2B,GAAoB,OAAK,IAAiB,CAACE,GAAG,wBAAwBC,eAAe,mBAAwBC,OAAO,CAACC,MAAkB,OAAK,OAAO,CAACL,UAAU,qBAAqBM,wBAAwB,CAACC,OAAOZ,EAAQa,IAAI,8BAA0C,OAAK,MAAM,CAACR,UAAU,2BAAsB,GAAoB,OAAK,MAAM,CAACA,UAAU,wBAAmB,EAAOJ,GAAQA,EAAOa,KAAI,SAAAC,GAAyB,cAAK,IAAiB,CAACR,GAAGQ,EAAWC,kBAAiB,GAAOD,UAAiB,EAA5/B,CAAkC,OAA29B,OAAgBE,EAAoB,YAAY,CAAChB,OAAO,oBAAmCH,YAAY,oBAA0BoB,KAAK,wBAA4R,WAAe,SAAW,SAAlQ,SAACC,EAAM,G,IAACnB,EAAO,UAAI,OAAEC,OAAOkB,EAAMC,MAAM,CAAC,aAAa,SAASpB,EAAQa,IAAI,MAAM,UAAS,iBAA4C,SAACQ,EAAS,G,IAACrB,EAAO,UAAK,MAAM,CAACF,YAAY,WAAI,OAAAuB,GAAS,QAAoBrB,EAAQa,IAAI,YAAgF,KAAK,CAACS,YAAW,GAA5D,CAAmEL","sources":["webpack://soapbox-fe/./app/soapbox/features/ui/components/pinned_accounts_panel.js"],"sourcesContent":["import _jsx from\"@babel/runtime/helpers/esm/jsx\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import{List as ImmutableList}from'immutable';import PropTypes from'prop-types';import React from'react';import ImmutablePropTypes from'react-immutable-proptypes';import ImmutablePureComponent from'react-immutable-pure-component';import{FormattedMessage,injectIntl}from'react-intl';import{connect}from'react-redux';import Icon from'soapbox/components/icon';import{fetchPinnedAccounts}from'../../../actions/accounts';import AccountContainer from'../../../containers/account_container';class PinnedAccountsPanel extends ImmutablePureComponent{componentDidMount(){this.props.fetchPinned();}render(){const{account}=this.props;const pinned=this.props.pinned.slice(0,this.props.limit);if(pinned.isEmpty()){return null;}return/*#__PURE__*/_jsx(\"div\",{className:\"wtf-panel\"},void 0,/*#__PURE__*/_jsx(\"div\",{className:\"wtf-panel-header\"},void 0,/*#__PURE__*/_jsx(Icon,{src:require('@tabler/icons/icons/users.svg'),className:\"wtf-panel-header__icon\"}),/*#__PURE__*/_jsx(\"span\",{className:\"wtf-panel-header__label\"},void 0,/*#__PURE__*/_jsx(FormattedMessage,{id:\"pinned_accounts.title\",defaultMessage:\"{name}\\u2019s choices\",values:{name:/*#__PURE__*/_jsx(\"span\",{className:\"display-name__html\",dangerouslySetInnerHTML:{__html:account.get('display_name_html')}})}}))),/*#__PURE__*/_jsx(\"div\",{className:\"wtf-panel__content\"},void 0,/*#__PURE__*/_jsx(\"div\",{className:\"wtf-panel__list\"},void 0,pinned&&pinned.map(suggestion=>/*#__PURE__*/_jsx(AccountContainer,{id:suggestion,withRelationship:false},suggestion)))));}}_defineProperty(PinnedAccountsPanel,\"propTypes\",{pinned:ImmutablePropTypes.list.isRequired,fetchPinned:PropTypes.func.isRequired,intl:PropTypes.object.isRequired});const mapStateToProps=(state,{account})=>({pinned:state.getIn(['user_lists','pinned',account.get('id'),'items'],ImmutableList())});const mapDispatchToProps=(dispatch,{account})=>{return{fetchPinned:()=>dispatch(fetchPinnedAccounts(account.get('id')))};};export default injectIntl(connect(mapStateToProps,mapDispatchToProps,null,{forwardRef:true})(PinnedAccountsPanel));"],"names":["componentDidMount","this","props","fetchPinned","render","account","pinned","slice","limit","isEmpty","className","src","id","defaultMessage","values","name","dangerouslySetInnerHTML","__html","get","map","suggestion","withRelationship","PinnedAccountsPanel","intl","state","getIn","dispatch","forwardRef"],"sourceRoot":""}