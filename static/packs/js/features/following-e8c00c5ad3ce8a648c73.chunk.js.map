{"version":3,"file":"packs/js/features/following-e8c00c5ad3ce8a648c73.chunk.js","mappings":"+JAAwKA,EAAOC,EAAQC,E,uoBAAk5BC,GAAS,QAAe,CAACC,QAAQ,CAAC,GAAK,mBAAmB,eAAiB,eAAq4BC,GAAgB,SAAh3B,SAACC,EAAM,G,IAACC,EAAM,SAA6BC,GAA5B,EAAAC,YAAqCF,EAAOC,UAAU,IAASE,EAAGJ,EAAMK,IAAI,MAAYC,GAAmBN,EAAMO,MAAM,CAAC,YAAY,EAAE,cAAc,IAAIC,gBAAgBN,EAASM,cAAoBC,GAAS,QAAYT,EAAMK,IAAI,aAAiBK,GAAW,EAAE,GAAGJ,EAAmBI,EAAU,SAAU,CAAC,IAAMC,GAAQ,QAAsBX,EAAME,GAAUQ,EAAUC,EAAQA,EAAQJ,MAAM,CAAC,MAAM,OAAO,EAAG,IAAMK,GAAU,QAAoBZ,EAAMU,EAAU,aAAmBG,EAAUb,EAAMO,MAAM,CAAC,gBAAgBG,EAAU,eAAc,GAAmF,MAAM,CAACA,UAAS,EAACI,YAA3EV,IAAKM,GAAgBG,IAAYJ,EAASM,gBAA6CC,YAAYhB,EAAMO,MAAM,CAAC,WAAWG,IAAYO,WAAWjB,EAAMO,MAAM,CAAC,aAAa,YAAYG,EAAU,UAAUQ,UAAUlB,EAAMO,MAAM,CAAC,aAAa,YAAYG,EAAU,SAASE,UAAS,KAAiDO,CAAKzB,GAAO,SAAmBE,EAAMD,EAAO,YAAgD,a,IAAY,sDAAZ,mBAA8ByB,IAAI,K,OAAE,OAAgB,EAAK,iBAAiB,KAAU,WAAQ,EAAKC,MAAMX,YAAmC,IAAxB,EAAKW,MAAMX,WAAgB,EAAKW,MAAMC,UAAS,QAAgB,EAAKD,MAAMX,cAAe,IAAI,CAACa,SAAQ,K,EAA07C,OAAzqD,OAAwP,YAAAC,kBAAA,WAAyB,MAA8BC,KAAKJ,MAA1BnB,EAAQ,kBAAEQ,EAAS,YAAgBA,IAAwB,IAAbA,GAAgBe,KAAKJ,MAAMC,UAAS,QAAaZ,IAAYe,KAAKJ,MAAMC,UAAS,QAAeZ,KAAkBe,KAAKJ,MAAMC,UAAS,QAAuBpB,KAAa,YAAAwB,mBAAA,SAAmBC,GAAgB,MAAqBF,KAAKJ,MAAzBX,EAAS,YAACY,EAAQ,WAAgBZ,IAAwB,IAAbA,GAAgBA,IAAYiB,EAAUjB,WAAWA,IAAWY,GAAS,QAAaZ,IAAYY,GAAS,QAAeZ,MAAc,YAAAkB,OAAA,WAAc,MAAoEH,KAAKJ,MAAxEQ,EAAI,OAACZ,EAAU,aAACC,EAAO,UAACF,EAAS,YAACJ,EAAS,YAACF,EAAS,YAACI,EAAW,cAAa,OAAIE,IAAwB,IAAbN,GAAkH,IAAbA,GAAiBO,EAAiGH,GAAgC,OAAK,IAAO,QAAG,GAAoB,OAAK,MAAM,CAACgB,UAAU,+BAA0B,GAAoB,OAAK,IAAiB,CAACC,GAAG,mCAAmCC,eAAe,2BAA8C,OAAK,IAAO,CAAClC,QAAQ+B,EAAKI,cAAcpC,EAASC,eAAU,GAAoB,OAAK,IAAe,CAACoC,UAAU,YAAYhB,QAAQA,EAAQN,UAAUA,EAAUuB,WAAWV,KAAKW,eAAeC,cAA0B,OAAK,IAAiB,CAACN,GAAG,wBAAwBC,eAAe,+CAA0C,EAAOf,EAAWqB,KAAI,SAAAP,GAAiB,cAAK,IAAiB,CAACA,GAAGA,EAAGQ,UAAS,GAAOR,SAAztB,OAAK,IAAO,QAAG,GAAoB,OAAK,IAAiB,MAA3K,OAAK,IAAO,QAAG,GAAoB,OAAK,IAAiB,MAA0xB,EAAlsD,CAAyB,OAA2qD,OAAgBpC,EAAQ,YAAY,CAACkC,KAAK,sBAA4B5B,OAAO,sBAA4BqB,SAAS,oBAA0BL,WAAW,eAA8BC,QAAQ,SAAeF,UAAU,SAAeF,YAAY,SAAeF,UAAU,aAAn+DlB,EAAs/DE,KAASF,IAASA","sources":["webpack://soapbox-fe/./app/soapbox/features/following/index.js"],"sourcesContent":["import _jsx from\"@babel/runtime/helpers/esm/jsx\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _debounce from\"lodash/debounce\";var _dec,_class,_class2,_temp;import\"core-js/modules/web.dom-collections.iterator.js\";import PropTypes from'prop-types';import React from'react';import ImmutablePropTypes from'react-immutable-proptypes';import ImmutablePureComponent from'react-immutable-pure-component';import{defineMessages,injectIntl,FormattedMessage}from'react-intl';import{connect}from'react-redux';import MissingIndicator from'soapbox/components/missing_indicator';import{findAccountByUsername}from'soapbox/selectors';import{getFollowDifference}from'soapbox/utils/accounts';import{getFeatures}from'soapbox/utils/features';import{fetchAccount,fetchFollowing,expandFollowing,fetchAccountByUsername}from'../../actions/accounts';import LoadingIndicator from'../../components/loading_indicator';import ScrollableList from'../../components/scrollable_list';import AccountContainer from'../../containers/account_container';import Column from'../ui/components/column';const messages=defineMessages({heading:{\"id\":\"column.following\",\"defaultMessage\":\"Following\"}});const mapStateToProps=(state,{params,withReplies=false})=>{const username=params.username||'';const me=state.get('me');const accountFetchError=(state.getIn(['accounts',-1,'username'])||'').toLowerCase()===username.toLowerCase();const features=getFeatures(state.get('instance'));let accountId=-1;if(accountFetchError){accountId=null;}else{const account=findAccountByUsername(state,username);accountId=account?account.getIn(['id'],null):-1;}const diffCount=getFollowDifference(state,accountId,'following');const isBlocked=state.getIn(['relationships',accountId,'blocked_by'],false);const unavailable=me===accountId?false:isBlocked&&!features.blockersVisible;return{accountId,unavailable,isAccount:!!state.getIn(['accounts',accountId]),accountIds:state.getIn(['user_lists','following',accountId,'items']),hasMore:!!state.getIn(['user_lists','following',accountId,'next']),diffCount};};let Following=(_dec=connect(mapStateToProps),_dec(_class=injectIntl(_class=(_temp=_class2=class Following extends ImmutablePureComponent{constructor(...args){super(...args);_defineProperty(this,\"handleLoadMore\",_debounce(()=>{if(this.props.accountId&&this.props.accountId!==-1){this.props.dispatch(expandFollowing(this.props.accountId));}},300,{leading:true}));}componentDidMount(){const{params:{username},accountId}=this.props;if(accountId&&accountId!==-1){this.props.dispatch(fetchAccount(accountId));this.props.dispatch(fetchFollowing(accountId));}else{this.props.dispatch(fetchAccountByUsername(username));}}componentDidUpdate(prevProps){const{accountId,dispatch}=this.props;if(accountId&&accountId!==-1&&accountId!==prevProps.accountId&&accountId){dispatch(fetchAccount(accountId));dispatch(fetchFollowing(accountId));}}render(){const{intl,accountIds,hasMore,isAccount,diffCount,accountId,unavailable}=this.props;if(!isAccount&&accountId!==-1){return/*#__PURE__*/_jsx(Column,{},void 0,/*#__PURE__*/_jsx(MissingIndicator,{}));}if(accountId===-1||!accountIds){return/*#__PURE__*/_jsx(Column,{},void 0,/*#__PURE__*/_jsx(LoadingIndicator,{}));}if(unavailable){return/*#__PURE__*/_jsx(Column,{},void 0,/*#__PURE__*/_jsx(\"div\",{className:\"empty-column-indicator\"},void 0,/*#__PURE__*/_jsx(FormattedMessage,{id:\"empty_column.account_unavailable\",defaultMessage:\"Profile unavailable\"})));}return/*#__PURE__*/_jsx(Column,{heading:intl.formatMessage(messages.heading)},void 0,/*#__PURE__*/_jsx(ScrollableList,{scrollKey:\"following\",hasMore:hasMore,diffCount:diffCount,onLoadMore:this.handleLoadMore,emptyMessage:/*#__PURE__*/_jsx(FormattedMessage,{id:\"account.follows.empty\",defaultMessage:\"This user doesn't follow anyone yet.\"})},void 0,accountIds.map(id=>/*#__PURE__*/_jsx(AccountContainer,{id:id,withNote:false},id))));}},_defineProperty(_class2,\"propTypes\",{intl:PropTypes.object.isRequired,params:PropTypes.object.isRequired,dispatch:PropTypes.func.isRequired,accountIds:ImmutablePropTypes.orderedSet,hasMore:PropTypes.bool,isAccount:PropTypes.bool,unavailable:PropTypes.bool,diffCount:PropTypes.number}),_temp))||_class)||_class);export{Following as default};"],"names":["_class","_class2","_temp","messages","heading","Following","state","params","username","withReplies","me","get","accountFetchError","getIn","toLowerCase","features","accountId","account","diffCount","isBlocked","unavailable","blockersVisible","isAccount","accountIds","hasMore","_dec","args","props","dispatch","leading","componentDidMount","this","componentDidUpdate","prevProps","render","intl","className","id","defaultMessage","formatMessage","scrollKey","onLoadMore","handleLoadMore","emptyMessage","map","withNote"],"sourceRoot":""}