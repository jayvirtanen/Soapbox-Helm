{"version":3,"file":"packs/js/features/bookmarks-5aff5740c364763d8c7f.chunk.js","mappings":"+JAAwKA,EAAOC,EAAQC,E,8lBAAslBC,GAAS,QAAe,CAACC,QAAQ,CAAC,GAAK,mBAAmB,eAAiB,eAAgPC,GAAgB,SAA3N,SAAAC,GAAO,OAAEC,UAAUD,EAAME,MAAM,CAAC,eAAe,YAAY,UAAUC,UAAUH,EAAME,MAAM,CAAC,eAAe,YAAY,cAAa,GAAME,UAAUJ,EAAME,MAAM,CAAC,eAAe,YAAY,YAAwDG,CAAKX,GAAO,SAAmBE,EAAMD,EAAO,YAAgD,a,IAAY,sDAAZ,mBAA8BW,IAAI,K,OAAE,OAAgB,EAAK,aAAY,WAAgC,OAAOC,EAAlB,EAAKC,MAAK,WAAiB,eAA8B,OAAgB,EAAK,iBAAiB,KAAU,WAAK,EAAKA,MAAMD,UAAS,aAA8B,IAAI,CAACE,SAAQ,MAAQ,OAAgB,EAAK,iBAAgB,WAAK,OAAO,EAAKC,e,EAAmyB,OAA/nC,OAA4W,YAAAC,kBAAA,WAAoBC,KAAKF,aAAa,YAAAG,OAAA,WAAc,MAA2ED,KAAKJ,MAA/EM,EAAI,OAACC,EAAkB,qBAACd,EAAS,YAACe,EAAQ,WAACC,EAAW,cAACb,EAAO,UAACD,EAAS,YAAmBe,IAASF,EAAeG,GAA0B,OAAK,IAAiB,CAACC,GAAG,yBAAyBC,eAAe,8EAA8E,OAAmB,OAAK,IAAO,CAACC,aAAY,QAAM,GAAoB,OAAK,IAAc,CAACC,QAAQT,EAAKU,cAAc3B,EAASC,YAAwB,OAAK,IAAW,CAAC2B,aAAaP,EAAOjB,UAAUA,EAAUyB,UAAU,uBAAuBC,OAAOX,GAAUZ,QAAQA,EAAQD,UAAUA,EAAUyB,WAAWhB,KAAKiB,eAAeC,UAAUlB,KAAKmB,cAAchB,mBAAmBA,EAAmBI,aAAaA,EAAaa,gBAAgBf,MAAgB,EAAxpC,CAAyB,OAAioC,OAAgBtB,EAAQ,YAAY,CAACY,SAAS,oBAA0BQ,mBAAmB,SAAed,UAAU,0BAAyCa,KAAK,sBAA4BE,SAAS,WAAiBC,YAAY,SAAeb,QAAQ,SAAeD,UAAU,WAAn8CT,EAAo9CE,KAASF,IAASA","sources":["webpack://soapbox-fe/./app/soapbox/features/bookmarks/index.js"],"sourcesContent":["import _jsx from\"@babel/runtime/helpers/esm/jsx\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _debounce from\"lodash/debounce\";var _dec,_class,_class2,_temp;import\"core-js/modules/web.dom-collections.iterator.js\";import PropTypes from'prop-types';import React from'react';import ImmutablePropTypes from'react-immutable-proptypes';import ImmutablePureComponent from'react-immutable-pure-component';import{defineMessages,injectIntl,FormattedMessage}from'react-intl';import{connect}from'react-redux';import Column from'soapbox/components/column';import SubNavigation from'soapbox/components/sub_navigation';import{fetchBookmarkedStatuses,expandBookmarkedStatuses}from'../../actions/bookmarks';import StatusList from'../../components/status_list';const messages=defineMessages({heading:{\"id\":\"column.bookmarks\",\"defaultMessage\":\"Bookmarks\"}});const mapStateToProps=state=>({statusIds:state.getIn(['status_lists','bookmarks','items']),isLoading:state.getIn(['status_lists','bookmarks','isLoading'],true),hasMore:!!state.getIn(['status_lists','bookmarks','next'])});let Bookmarks=(_dec=connect(mapStateToProps),_dec(_class=injectIntl(_class=(_temp=_class2=class Bookmarks extends ImmutablePureComponent{constructor(...args){super(...args);_defineProperty(this,\"fetchData\",()=>{const{dispatch}=this.props;return dispatch(fetchBookmarkedStatuses());});_defineProperty(this,\"handleLoadMore\",_debounce(()=>{this.props.dispatch(expandBookmarkedStatuses());},300,{leading:true}));_defineProperty(this,\"handleRefresh\",()=>{return this.fetchData();});}componentDidMount(){this.fetchData();}render(){const{intl,shouldUpdateScroll,statusIds,columnId,multiColumn,hasMore,isLoading}=this.props;const pinned=!!columnId;const emptyMessage=/*#__PURE__*/_jsx(FormattedMessage,{id:\"empty_column.bookmarks\",defaultMessage:\"You don't have any bookmarks yet. When you add one, it will show up here.\"});return/*#__PURE__*/_jsx(Column,{transparent:true},void 0,/*#__PURE__*/_jsx(SubNavigation,{message:intl.formatMessage(messages.heading)}),/*#__PURE__*/_jsx(StatusList,{trackScroll:!pinned,statusIds:statusIds,scrollKey:\"bookmarked_statuses-\".concat(columnId),hasMore:hasMore,isLoading:isLoading,onLoadMore:this.handleLoadMore,onRefresh:this.handleRefresh,shouldUpdateScroll:shouldUpdateScroll,emptyMessage:emptyMessage,bindToDocument:!multiColumn}));}},_defineProperty(_class2,\"propTypes\",{dispatch:PropTypes.func.isRequired,shouldUpdateScroll:PropTypes.func,statusIds:ImmutablePropTypes.orderedSet.isRequired,intl:PropTypes.object.isRequired,columnId:PropTypes.string,multiColumn:PropTypes.bool,hasMore:PropTypes.bool,isLoading:PropTypes.bool}),_temp))||_class)||_class);export{Bookmarks as default};"],"names":["_class","_class2","_temp","messages","heading","Bookmarks","state","statusIds","getIn","isLoading","hasMore","_dec","args","dispatch","props","leading","fetchData","componentDidMount","this","render","intl","shouldUpdateScroll","columnId","multiColumn","pinned","emptyMessage","id","defaultMessage","transparent","message","formatMessage","trackScroll","scrollKey","concat","onLoadMore","handleLoadMore","onRefresh","handleRefresh","bindToDocument"],"sourceRoot":""}