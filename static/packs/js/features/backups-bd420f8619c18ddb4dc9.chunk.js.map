{"version":3,"file":"packs/js/features/backups-bd420f8619c18ddb4dc9.chunk.js","mappings":"+JAAiIA,EAAOC,EAAQC,E,0jBAAyeC,GAAS,QAAe,CAACC,QAAQ,CAAC,GAAK,iBAAiB,eAAiB,WAAWC,OAAO,CAAC,GAAK,yBAAyB,eAAiB,iBAAiBC,aAAa,CAAC,GAAK,wBAAwB,eAAiB,8BAA8BC,mBAAmB,CAAC,GAAK,+BAA+B,eAAiB,mBAAmBC,QAAQ,CAAC,GAAK,kBAAkB,eAAiB,aAAkIC,GAAc,SAA7G,SAAAC,GAAO,OAAEC,QAAQD,EAAME,IAAI,WAAWC,SAASC,QAAO,SAAAC,GAAQ,OAAAA,EAAOH,IAAI,qBAA6DI,CAAKhB,GAAO,SAAmBE,EAAMD,EAAO,YAA8C,a,IAAY,sDAAZ,mBAA8BgB,IAAI,K,OAAE,OAAgB,EAAK,QAAQ,CAACC,WAAU,KAAO,OAAgB,EAAK,sBAAqB,SAAAC,GAAI,EAAKC,MAAMC,UAAS,WAAgBF,EAAEG,qBAAoB,OAAgB,EAAK,kBAAiB,WAA4B,MAAM,CAAC,CAACC,KAAnB,EAAKH,MAAK,KAAmBI,cAAcrB,EAASE,QAAQoB,OAAO,EAAKC,mBAAmBC,KAAK,EAAQ,S,EAAqlC,OAAt8C,OAAuZ,YAAAC,kBAAA,sBAAoBC,KAAKT,MAAMC,UAAS,WAAgBS,MAAK,WAAK,EAAKC,SAAS,CAACb,WAAU,OAAWc,OAAM,gBAAS,YAAAC,OAAA,WAAc,MAAeJ,KAAKT,MAAnBc,EAAI,OAACvB,EAAO,UAAmBO,EAAWW,KAAKnB,MAAK,UAAOyB,EAAYjB,GAA6B,IAAlBP,EAAQyB,QAAkB7B,GAAgC,OAAK,IAAI,CAAC8B,KAAK,IAAIC,QAAQT,KAAKH,yBAAoB,EAAOQ,EAAKV,cAAcrB,EAASI,qBAAqB,OAAmB,OAAK,IAAO,CAACoB,KAAK,iBAAiBvB,QAAQ8B,EAAKV,cAAcrB,EAASC,SAASmC,KAAKV,KAAKW,uBAAkB,GAAoB,OAAK,IAAe,CAACtB,UAAUA,EAAUiB,YAAYA,EAAYM,UAAU,UAAUnC,aAAa4B,EAAKV,cAAcrB,EAASG,aAAa,CAACmB,OAAOlB,UAAsB,EAAOI,EAAQ+B,KAAI,SAAA3B,GAAqB,cAAK,MAAM,CAAC4B,UAAU,IAAW,SAAS,CAAC,mBAAmB5B,EAAOH,IAAI,gBAAgBG,EAAOH,IAAI,MAAMG,EAAOH,IAAI,cAA0B,OAAK,IAAI,CAACyB,KAAKtB,EAAOH,IAAI,OAAOgC,OAAO,eAAU,EAAO7B,EAAOH,IAAI,iBAA6B,OAAK,MAAM,QAAG,EAAOsB,EAAKV,cAAcrB,EAASK,SAAS,KAAKO,EAAOH,IAAI,uBAAqB,EAA79C,CAAuB,OAAw8C,OAAgBX,EAAQ,YAAY,CAACiC,KAAK,wBAA9hDlC,EAA4jDE,KAASF,IAASA","sources":["webpack://soapbox-fe/./app/soapbox/features/backups/index.js"],"sourcesContent":["import _jsx from\"@babel/runtime/helpers/esm/jsx\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";var _dec,_class,_class2,_temp;import\"core-js/modules/web.dom-collections.iterator.js\";import classNames from'classnames';import PropTypes from'prop-types';import React from'react';import ImmutablePureComponent from'react-immutable-pure-component';import{defineMessages,injectIntl}from'react-intl';import{connect}from'react-redux';import{fetchBackups,createBackup}from'soapbox/actions/backups';import ScrollableList from'soapbox/components/scrollable_list';import Column from'../ui/components/better_column';const messages=defineMessages({heading:{\"id\":\"column.backups\",\"defaultMessage\":\"Backups\"},create:{\"id\":\"backups.actions.create\",\"defaultMessage\":\"Create backup\"},emptyMessage:{\"id\":\"backups.empty_message\",\"defaultMessage\":\"No backups found. {action}\"},emptyMessageAction:{\"id\":\"backups.empty_message.action\",\"defaultMessage\":\"Create one now?\"},pending:{\"id\":\"backups.pending\",\"defaultMessage\":\"Pending\"}});const mapStateToProps=state=>({backups:state.get('backups').toList().sortBy(backup=>backup.get('inserted_at'))});let Backups=(_dec=connect(mapStateToProps),_dec(_class=injectIntl(_class=(_temp=_class2=class Backups extends ImmutablePureComponent{constructor(...args){super(...args);_defineProperty(this,\"state\",{isLoading:true});_defineProperty(this,\"handleCreateBackup\",e=>{this.props.dispatch(createBackup());e.preventDefault();});_defineProperty(this,\"makeColumnMenu\",()=>{const{intl}=this.props;return[{text:intl.formatMessage(messages.create),action:this.handleCreateBackup,icon:require('@tabler/icons/icons/plus.svg')}];});}componentDidMount(){this.props.dispatch(fetchBackups()).then(()=>{this.setState({isLoading:false});}).catch(()=>{});}render(){const{intl,backups}=this.props;const{isLoading}=this.state;const showLoading=isLoading&&backups.count()===0;const emptyMessageAction=/*#__PURE__*/_jsx(\"a\",{href:\"#\",onClick:this.handleCreateBackup},void 0,intl.formatMessage(messages.emptyMessageAction));return/*#__PURE__*/_jsx(Column,{icon:\"cloud-download\",heading:intl.formatMessage(messages.heading),menu:this.makeColumnMenu()},void 0,/*#__PURE__*/_jsx(ScrollableList,{isLoading:isLoading,showLoading:showLoading,scrollKey:\"backups\",emptyMessage:intl.formatMessage(messages.emptyMessage,{action:emptyMessageAction})},void 0,backups.map(backup=>/*#__PURE__*/_jsx(\"div\",{className:classNames('backup',{'backup--pending':!backup.get('processed')})},backup.get('id'),backup.get('processed')?/*#__PURE__*/_jsx(\"a\",{href:backup.get('url'),target:\"_blank\"},void 0,backup.get('inserted_at')):/*#__PURE__*/_jsx(\"div\",{},void 0,intl.formatMessage(messages.pending),\": \",backup.get('inserted_at'))))));}},_defineProperty(_class2,\"propTypes\",{intl:PropTypes.object.isRequired}),_temp))||_class)||_class);export{Backups as default};"],"names":["_class","_class2","_temp","messages","heading","create","emptyMessage","emptyMessageAction","pending","Backups","state","backups","get","toList","sortBy","backup","_dec","args","isLoading","e","props","dispatch","preventDefault","text","formatMessage","action","handleCreateBackup","icon","componentDidMount","this","then","setState","catch","render","intl","showLoading","count","href","onClick","menu","makeColumnMenu","scrollKey","map","className","target"],"sourceRoot":""}