{"version":3,"file":"packs/js/features/favourited_statuses-6721697c1c220c0823ba.chunk.js","mappings":"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","sources":["webpack://soapbox-fe/./app/soapbox/features/favourited_statuses/index.js"],"sourcesContent":["import _jsx from\"@babel/runtime/helpers/esm/jsx\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _debounce from\"lodash/debounce\";var _dec,_class,_class2,_temp;import\"core-js/modules/web.dom-collections.iterator.js\";import PropTypes from'prop-types';import React from'react';import ImmutablePropTypes from'react-immutable-proptypes';import ImmutablePureComponent from'react-immutable-pure-component';import{defineMessages,injectIntl,FormattedMessage}from'react-intl';import{connect}from'react-redux';import MissingIndicator from'soapbox/components/missing_indicator';import{findAccountByUsername}from'soapbox/selectors';import{getFeatures}from'soapbox/utils/features';import{fetchAccount,fetchAccountByUsername}from'../../actions/accounts';import{fetchFavouritedStatuses,expandFavouritedStatuses,fetchAccountFavouritedStatuses,expandAccountFavouritedStatuses}from'../../actions/favourites';import LoadingIndicator from'../../components/loading_indicator';import StatusList from'../../components/status_list';import Column from'../ui/components/column';const messages=defineMessages({heading:{\"id\":\"column.favourited_statuses\",\"defaultMessage\":\"Liked posts\"}});const mapStateToProps=(state,{params})=>{const username=params.username||'';const me=state.get('me');const meUsername=state.getIn(['accounts',me,'username'],'');const isMyAccount=username.toLowerCase()===meUsername.toLowerCase();const features=getFeatures(state.get('instance'));if(isMyAccount){return{isMyAccount,statusIds:state.getIn(['status_lists','favourites','items']),isLoading:state.getIn(['status_lists','favourites','isLoading'],true),hasMore:!!state.getIn(['status_lists','favourites','next'])};}const accountFetchError=(state.getIn(['accounts',-1,'username'])||'').toLowerCase()===username.toLowerCase();let accountId=-1;if(accountFetchError){accountId=null;}else{const account=findAccountByUsername(state,username);accountId=account?account.getIn(['id'],null):-1;}const isBlocked=state.getIn(['relationships',accountId,'blocked_by'],false);const unavailable=me===accountId?false:isBlocked&&!features.blockersVisible;return{isMyAccount,accountId,unavailable,username,isAccount:!!state.getIn(['accounts',accountId]),statusIds:state.getIn(['status_lists',\"favourites:\".concat(accountId),'items'],[]),isLoading:state.getIn(['status_lists',\"favourites:\".concat(accountId),'isLoading'],true),hasMore:!!state.getIn(['status_lists',\"favourites:\".concat(accountId),'next'])};};let Favourites=(_dec=connect(mapStateToProps),_dec(_class=injectIntl(_class=(_temp=_class2=class Favourites extends ImmutablePureComponent{constructor(...args){super(...args);_defineProperty(this,\"handleLoadMore\",_debounce(()=>{const{accountId,isMyAccount}=this.props;if(isMyAccount){this.props.dispatch(expandFavouritedStatuses());}else{this.props.dispatch(expandAccountFavouritedStatuses(accountId));}},300,{leading:true}));}componentDidMount(){const{accountId,isMyAccount,username}=this.props;if(isMyAccount)this.props.dispatch(fetchFavouritedStatuses());else{if(accountId&&accountId!==-1){this.props.dispatch(fetchAccount(accountId));this.props.dispatch(fetchAccountFavouritedStatuses(accountId));}else{this.props.dispatch(fetchAccountByUsername(username));}}}componentDidUpdate(prevProps){const{accountId,isMyAccount}=this.props;if(!isMyAccount&&accountId&&accountId!==-1&&accountId!==prevProps.accountId&&accountId){this.props.dispatch(fetchAccount(accountId));this.props.dispatch(fetchAccountFavouritedStatuses(accountId));}}render(){const{intl,statusIds,isLoading,hasMore,isMyAccount,isAccount,accountId,unavailable}=this.props;if(!isMyAccount&&!isAccount&&accountId!==-1){return/*#__PURE__*/_jsx(Column,{},void 0,/*#__PURE__*/_jsx(MissingIndicator,{}));}if(accountId===-1){return/*#__PURE__*/_jsx(Column,{},void 0,/*#__PURE__*/_jsx(LoadingIndicator,{}));}if(unavailable){return/*#__PURE__*/_jsx(Column,{},void 0,/*#__PURE__*/_jsx(\"div\",{className:\"empty-column-indicator\"},void 0,/*#__PURE__*/_jsx(FormattedMessage,{id:\"empty_column.account_unavailable\",defaultMessage:\"Profile unavailable\"})));}const emptyMessage=isMyAccount?/*#__PURE__*/_jsx(FormattedMessage,{id:\"empty_column.favourited_statuses\",defaultMessage:\"You don't have any liked posts yet. When you like one, it will show up here.\"}):/*#__PURE__*/_jsx(FormattedMessage,{id:\"empty_column.account_favourited_statuses\",defaultMessage:\"This user doesn't have any liked posts yet.\"});return/*#__PURE__*/_jsx(Column,{heading:intl.formatMessage(messages.heading)},void 0,/*#__PURE__*/_jsx(StatusList,{statusIds:statusIds,scrollKey:\"favourited_statuses\",hasMore:hasMore,isLoading:isLoading,onLoadMore:this.handleLoadMore,emptyMessage:emptyMessage}));}},_defineProperty(_class2,\"propTypes\",{dispatch:PropTypes.func.isRequired,statusIds:ImmutablePropTypes.orderedSet.isRequired,intl:PropTypes.object.isRequired,hasMore:PropTypes.bool,isLoading:PropTypes.bool,isMyAccount:PropTypes.bool.isRequired}),_temp))||_class)||_class);export{Favourites as default};"],"names":["_class","_class2","_temp","messages","heading","Favourites","state","username","me","get","meUsername","getIn","isMyAccount","toLowerCase","features","statusIds","isLoading","hasMore","accountId","account","isBlocked","unavailable","blockersVisible","isAccount","concat","_dec","args","props","dispatch","leading","componentDidMount","this","componentDidUpdate","prevProps","render","intl","className","id","defaultMessage","emptyMessage","formatMessage","scrollKey","onLoadMore","handleLoadMore"],"sourceRoot":""}