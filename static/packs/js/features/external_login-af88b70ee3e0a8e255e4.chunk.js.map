{"version":3,"file":"packs/js/features/external_login-af88b70ee3e0a8e255e4.chunk.js","mappings":"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","sources":["webpack://soapbox-fe/./app/soapbox/utils/ethereum.js","webpack://soapbox-fe/./app/soapbox/actions/external_auth.js","webpack://soapbox-fe/./app/soapbox/features/external_login/components/external_login_form.js","webpack://soapbox-fe/./app/soapbox/features/external_login/index.js"],"sourcesContent":["export const ethereum=()=>window.ethereum;export const hasEthereum=()=>Boolean(ethereum());// Requests an Ethereum wallet from the browser\n// Returns a Promise containing the Ethereum wallet address (string).\nexport const getWallet=()=>{return ethereum().request({method:'eth_requestAccounts'}).then(wallets=>wallets[0]);};// Asks the browser to sign a message with Ethereum.\n// Returns a Promise containing the signature (string).\nexport const signMessage=(wallet,message)=>{return ethereum().request({method:'personal_sign',params:[message,wallet]});};// Combines the above functions.\n// Returns an object with the `wallet` and `signature`\nexport const getWalletAndSign=message=>{return getWallet().then(wallet=>{return signMessage(wallet,message).then(signature=>{return{wallet,signature};});});};","import\"core-js/modules/web.dom-collections.iterator.js\";import\"core-js/modules/web.url.js\";/**\n * External Auth: workflow for logging in to remote servers.\n * @module soapbox/actions/external_auth\n * @see module:soapbox/actions/auth\n * @see module:soapbox/actions/apps\n * @see module:soapbox/actions/oauth\n */import{createApp}from'soapbox/actions/apps';import{authLoggedIn,verifyCredentials,switchAccount}from'soapbox/actions/auth';import{obtainOAuthToken}from'soapbox/actions/oauth';import{normalizeInstance}from'soapbox/normalizers';import{parseBaseURL}from'soapbox/utils/auth';import sourceCode from'soapbox/utils/code';import{getWalletAndSign}from'soapbox/utils/ethereum';import{getFeatures}from'soapbox/utils/features';import{getQuirks}from'soapbox/utils/quirks';import{baseClient}from'../api';const fetchExternalInstance=baseURL=>{return baseClient(null,baseURL).get('/api/v1/instance').then(({data:instance})=>normalizeInstance(instance)).catch(error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// Authenticated fetch is enabled.\n// Continue with a limited featureset.\nreturn normalizeInstance({});}else{throw error;}});};function createExternalApp(instance,baseURL){return(dispatch,getState)=>{// Mitra: skip creating the auth app\nif(getQuirks(instance).noApps)return new Promise(f=>f({}));const{scopes}=getFeatures(instance);const params={client_name:sourceCode.displayName,redirect_uris:\"\".concat(window.location.origin,\"/auth/external\"),website:sourceCode.homepage,scopes};return dispatch(createApp(params,baseURL));};}function externalAuthorize(instance,baseURL){return(dispatch,getState)=>{const{scopes}=getFeatures(instance);return dispatch(createExternalApp(instance,baseURL)).then(app=>{const{client_id,redirect_uri}=app;const query=new URLSearchParams({client_id,redirect_uri,response_type:'code',scope:scopes});localStorage.setItem('soapbox:external:app',JSON.stringify(app));localStorage.setItem('soapbox:external:baseurl',baseURL);localStorage.setItem('soapbox:external:scopes',scopes);window.location.href=\"\".concat(baseURL,\"/oauth/authorize?\").concat(query.toString());});};}export function externalEthereumLogin(instance,baseURL){return(dispatch,getState)=>{const loginMessage=instance.get('login_message');return getWalletAndSign(loginMessage).then(({wallet,signature})=>{return dispatch(createExternalApp(instance,baseURL)).then(app=>{const params={grant_type:'ethereum',wallet_address:wallet.toLowerCase(),client_id:app.client_id,client_secret:app.client_secret,password:signature,redirect_uri:'urn:ietf:wg:oauth:2.0:oob',scope:getFeatures(instance).scopes};return dispatch(obtainOAuthToken(params,baseURL)).then(token=>dispatch(authLoggedIn(token))).then(({access_token})=>dispatch(verifyCredentials(access_token,baseURL))).then(account=>dispatch(switchAccount(account.id))).then(()=>window.location.href='/');});});};}export function externalLogin(host){return(dispatch,getState)=>{const baseURL=parseBaseURL(host)||parseBaseURL(\"https://\".concat(host));return fetchExternalInstance(baseURL).then(instance=>{const features=getFeatures(instance);const quirks=getQuirks(instance);if(features.ethereumLogin&&quirks.noOAuthForm){return dispatch(externalEthereumLogin(instance,baseURL));}else{return dispatch(externalAuthorize(instance,baseURL));}});};}export function loginWithCode(code){return(dispatch,getState)=>{const{client_id,client_secret,redirect_uri}=JSON.parse(localStorage.getItem('soapbox:external:app'));const baseURL=localStorage.getItem('soapbox:external:baseurl');const scope=localStorage.getItem('soapbox:external:scopes');const params={client_id,client_secret,redirect_uri,grant_type:'authorization_code',scope,code};return dispatch(obtainOAuthToken(params,baseURL)).then(token=>dispatch(authLoggedIn(token))).then(({access_token})=>dispatch(verifyCredentials(access_token,baseURL))).then(account=>dispatch(switchAccount(account.id))).then(()=>window.location.href='/');};}","import _jsx from\"@babel/runtime/helpers/esm/jsx\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";var _dec,_class;import\"core-js/modules/web.dom-collections.iterator.js\";import\"core-js/modules/web.url.js\";import React from'react';import ImmutablePureComponent from'react-immutable-pure-component';import{injectIntl,FormattedMessage,defineMessages}from'react-intl';import{connect}from'react-redux';import{externalLogin,loginWithCode}from'soapbox/actions/external_auth';import LoadingIndicator from'soapbox/components/loading_indicator';import{SimpleForm,FieldsGroup,TextInput}from'soapbox/features/forms';const messages=defineMessages({instanceLabel:{\"id\":\"login.fields.instance_label\",\"defaultMessage\":\"Instance\"},instancePlaceholder:{\"id\":\"login.fields.instance_placeholder\",\"defaultMessage\":\"example.com\"}});let ExternalLoginForm=(_dec=connect(),_dec(_class=injectIntl(_class=class ExternalLoginForm extends ImmutablePureComponent{constructor(...args){super(...args);_defineProperty(this,\"state\",{host:'',isLoading:false});_defineProperty(this,\"handleHostChange\",({target})=>{this.setState({host:target.value});});_defineProperty(this,\"handleSubmit\",e=>{const{dispatch}=this.props;const{host}=this.state;this.setState({isLoading:true});dispatch(externalLogin(host)).then(()=>this.setState({isLoading:false})).catch(()=>this.setState({isLoading:false}));});}componentDidMount(){const code=new URLSearchParams(window.location.search).get('code');if(code){this.setState({code});this.props.dispatch(loginWithCode(code));}}render(){const{intl}=this.props;const{isLoading,code}=this.state;if(code){return/*#__PURE__*/_jsx(LoadingIndicator,{});}return/*#__PURE__*/_jsx(SimpleForm,{onSubmit:this.handleSubmit,className:\"external-login\"},void 0,/*#__PURE__*/_jsx(\"fieldset\",{disabled:isLoading},void 0,/*#__PURE__*/_jsx(FieldsGroup,{},void 0,/*#__PURE__*/_jsx(TextInput,{label:intl.formatMessage(messages.instanceLabel),placeholder:intl.formatMessage(messages.instancePlaceholder),name:\"host\",value:this.state.host,onChange:this.handleHostChange,autoComplete:\"off\",autoCorrect:\"off\",autoCapitalize:\"off\",required:true}))),/*#__PURE__*/_jsx(\"div\",{className:\"actions\"},void 0,/*#__PURE__*/_jsx(\"button\",{name:\"button\",type:\"submit\",className:\"btn button button-primary\"},void 0,/*#__PURE__*/_jsx(FormattedMessage,{id:\"login.log_in\",defaultMessage:\"Log in\"}))));}})||_class)||_class);export{ExternalLoginForm as default};","import _jsx from\"@babel/runtime/helpers/esm/jsx\";import React from'react';import ImmutablePureComponent from'react-immutable-pure-component';import ExternalLoginForm from'./components/external_login_form';export default class ExternalLoginPage extends ImmutablePureComponent{render(){return/*#__PURE__*/_jsx(ExternalLoginForm,{});}}"],"names":["ethereum","window","createExternalApp","instance","baseURL","dispatch","getState","noApps","Promise","f","scopes","params","client_name","redirect_uris","concat","location","origin","website","externalLogin","host","get","then","catch","error","_error$response","response","status","fetchExternalInstance","features","quirks","ethereumLogin","noOAuthForm","message","request","method","wallets","wallet","signMessage","signature","getWalletAndSign","app","grant_type","wallet_address","toLowerCase","client_id","client_secret","password","redirect_uri","scope","token","auth","access_token","account","id","href","externalEthereumLogin","query","URLSearchParams","response_type","localStorage","setItem","JSON","stringify","toString","externalAuthorize","_class","messages","instanceLabel","instancePlaceholder","ExternalLoginForm","_dec","injectIntl","args","isLoading","target","setState","value","e","props","state","componentDidMount","code","search","this","parse","getItem","loginWithCode","render","intl","onSubmit","handleSubmit","className","disabled","label","formatMessage","placeholder","name","onChange","handleHostChange","autoComplete","autoCorrect","autoCapitalize","required","type","defaultMessage"],"sourceRoot":""}