{"version":3,"file":"packs/js/features/blocks-ea7ee28dda2354da304a.chunk.js","mappings":"+JAAwKA,EAAOC,EAAQC,E,smBAAsoBC,GAAS,QAAe,CAACC,QAAQ,CAAC,GAAK,gBAAgB,eAAiB,mBAAsKC,GAAa,SAA1I,SAAAC,GAAO,OAAEC,WAAWD,EAAME,MAAM,CAAC,aAAa,SAAS,UAAUC,UAAUH,EAAME,MAAM,CAAC,aAAa,SAAS,YAAqDE,CAAKV,GAAO,SAAmBE,EAAMD,EAAO,YAA6C,a,IAAY,sDAAZ,mBAA8BU,IAAI,K,OAAE,OAAgB,EAAK,iBAAiB,KAAU,WAAK,EAAKC,MAAMC,UAAS,aAAkB,IAAI,CAACC,SAAQ,K,EAAwoB,OAA3yB,OAA4K,YAAAC,kBAAA,WAAoBC,KAAKJ,MAAMC,UAAS,YAAgB,YAAAI,OAAA,WAAc,MAA0BD,KAAKJ,MAA9BM,EAAI,OAACX,EAAU,aAACE,EAAO,UAAa,IAAIF,EAAY,OAAmB,OAAK,IAAO,QAAG,GAAoB,OAAK,IAAiB,KAAM,IAAMY,GAA0B,OAAK,IAAiB,CAACC,GAAG,sBAAsBC,eAAe,uCAAuC,OAAmB,OAAK,IAAO,CAACC,KAAK,MAAMlB,QAAQc,EAAKK,cAAcpB,EAASC,eAAU,GAAoB,OAAK,IAAe,CAACoB,UAAU,SAASC,WAAWT,KAAKU,eAAejB,QAAQA,EAAQU,aAAaA,QAAc,EAAOZ,EAAWoB,KAAI,SAAAP,GAAiB,cAAK,IAAiB,CAACA,GAAGA,GAAIA,SAAQ,EAAj0B,CAAsB,OAA6yB,OAAgBnB,EAAQ,YAAY,CAAC2B,OAAO,sBAA4Bf,SAAS,oBAA0BN,WAAW,eAA8BE,QAAQ,SAAeS,KAAK,wBAAxgClB,EAAsiCE,KAASF,IAASA","sources":["webpack://soapbox-fe/./app/soapbox/features/blocks/index.js"],"sourcesContent":["import _jsx from\"@babel/runtime/helpers/esm/jsx\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _debounce from\"lodash/debounce\";var _dec,_class,_class2,_temp;import\"core-js/modules/web.dom-collections.iterator.js\";import PropTypes from'prop-types';import React from'react';import ImmutablePropTypes from'react-immutable-proptypes';import ImmutablePureComponent from'react-immutable-pure-component';import{defineMessages,injectIntl,FormattedMessage}from'react-intl';import{connect}from'react-redux';import{fetchBlocks,expandBlocks}from'../../actions/blocks';import LoadingIndicator from'../../components/loading_indicator';import ScrollableList from'../../components/scrollable_list';import AccountContainer from'../../containers/account_container';import Column from'../ui/components/column';const messages=defineMessages({heading:{\"id\":\"column.blocks\",\"defaultMessage\":\"Blocked users\"}});const mapStateToProps=state=>({accountIds:state.getIn(['user_lists','blocks','items']),hasMore:!!state.getIn(['user_lists','blocks','next'])});let Blocks=(_dec=connect(mapStateToProps),_dec(_class=injectIntl(_class=(_temp=_class2=class Blocks extends ImmutablePureComponent{constructor(...args){super(...args);_defineProperty(this,\"handleLoadMore\",_debounce(()=>{this.props.dispatch(expandBlocks());},300,{leading:true}));}componentDidMount(){this.props.dispatch(fetchBlocks());}render(){const{intl,accountIds,hasMore}=this.props;if(!accountIds){return/*#__PURE__*/_jsx(Column,{},void 0,/*#__PURE__*/_jsx(LoadingIndicator,{}));}const emptyMessage=/*#__PURE__*/_jsx(FormattedMessage,{id:\"empty_column.blocks\",defaultMessage:\"You haven't blocked any users yet.\"});return/*#__PURE__*/_jsx(Column,{icon:\"ban\",heading:intl.formatMessage(messages.heading)},void 0,/*#__PURE__*/_jsx(ScrollableList,{scrollKey:\"blocks\",onLoadMore:this.handleLoadMore,hasMore:hasMore,emptyMessage:emptyMessage},void 0,accountIds.map(id=>/*#__PURE__*/_jsx(AccountContainer,{id:id},id))));}},_defineProperty(_class2,\"propTypes\",{params:PropTypes.object.isRequired,dispatch:PropTypes.func.isRequired,accountIds:ImmutablePropTypes.orderedSet,hasMore:PropTypes.bool,intl:PropTypes.object.isRequired}),_temp))||_class)||_class);export{Blocks as default};"],"names":["_class","_class2","_temp","messages","heading","Blocks","state","accountIds","getIn","hasMore","_dec","args","props","dispatch","leading","componentDidMount","this","render","intl","emptyMessage","id","defaultMessage","icon","formatMessage","scrollKey","onLoadMore","handleLoadMore","map","params"],"sourceRoot":""}