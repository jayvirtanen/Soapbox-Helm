{"version":3,"file":"packs/js/features/domain_blocks-085482a67eb0e450343b.chunk.js","mappings":"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","sources":["webpack://soapbox-fe/./app/soapbox/components/domain.js","webpack://soapbox-fe/./app/soapbox/features/domain_blocks/index.js","webpack://soapbox-fe/./app/soapbox/containers/domain_container.js"],"sourcesContent":["import _jsx from\"@babel/runtime/helpers/esm/jsx\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";var _class,_class2,_temp;import\"core-js/modules/web.dom-collections.iterator.js\";import PropTypes from'prop-types';import React from'react';import ImmutablePureComponent from'react-immutable-pure-component';import{defineMessages,injectIntl}from'react-intl';import IconButton from'./icon_button';const messages=defineMessages({unblockDomain:{\"id\":\"account.unblock_domain\",\"defaultMessage\":\"Unhide {domain}\"}});let Account=injectIntl(_class=(_temp=_class2=class Account extends ImmutablePureComponent{constructor(...args){super(...args);_defineProperty(this,\"handleDomainUnblock\",()=>{this.props.onUnblockDomain(this.props.domain);});}render(){const{domain,intl}=this.props;return/*#__PURE__*/_jsx(\"div\",{className:\"domain\"},void 0,/*#__PURE__*/_jsx(\"div\",{className:\"domain__wrapper\"},void 0,/*#__PURE__*/_jsx(\"span\",{className:\"domain__domain-name\"},void 0,/*#__PURE__*/_jsx(\"strong\",{},void 0,domain)),/*#__PURE__*/_jsx(\"div\",{className:\"domain__buttons\"},void 0,/*#__PURE__*/_jsx(IconButton,{active:true,src:require('@tabler/icons/icons/lock-open.svg'),title:intl.formatMessage(messages.unblockDomain,{domain}),onClick:this.handleDomainUnblock}))));}},_defineProperty(_class2,\"propTypes\",{domain:PropTypes.string,onUnblockDomain:PropTypes.func.isRequired,intl:PropTypes.object.isRequired}),_temp))||_class;export{Account as default};","import _jsx from\"@babel/runtime/helpers/esm/jsx\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";import _debounce from\"lodash/debounce\";var _dec,_class,_class2,_temp;import\"core-js/modules/web.dom-collections.iterator.js\";import PropTypes from'prop-types';import React from'react';import ImmutablePropTypes from'react-immutable-proptypes';import ImmutablePureComponent from'react-immutable-pure-component';import{defineMessages,injectIntl,FormattedMessage}from'react-intl';import{connect}from'react-redux';import{fetchDomainBlocks,expandDomainBlocks}from'../../actions/domain_blocks';import LoadingIndicator from'../../components/loading_indicator';import ScrollableList from'../../components/scrollable_list';import DomainContainer from'../../containers/domain_container';import Column from'../ui/components/column';const messages=defineMessages({heading:{\"id\":\"column.domain_blocks\",\"defaultMessage\":\"Hidden domains\"},unblockDomain:{\"id\":\"account.unblock_domain\",\"defaultMessage\":\"Unhide {domain}\"}});const mapStateToProps=state=>({domains:state.getIn(['domain_lists','blocks','items']),hasMore:!!state.getIn(['domain_lists','blocks','next'])});let Blocks=(_dec=connect(mapStateToProps),_dec(_class=injectIntl(_class=(_temp=_class2=class Blocks extends ImmutablePureComponent{constructor(...args){super(...args);_defineProperty(this,\"handleLoadMore\",_debounce(()=>{this.props.dispatch(expandDomainBlocks());},300,{leading:true}));}componentDidMount(){this.props.dispatch(fetchDomainBlocks());}render(){const{intl,domains,hasMore}=this.props;if(!domains){return/*#__PURE__*/_jsx(Column,{},void 0,/*#__PURE__*/_jsx(LoadingIndicator,{}));}const emptyMessage=/*#__PURE__*/_jsx(FormattedMessage,{id:\"empty_column.domain_blocks\",defaultMessage:\"There are no hidden domains yet.\"});return/*#__PURE__*/_jsx(Column,{icon:\"minus-circle\",heading:intl.formatMessage(messages.heading)},void 0,/*#__PURE__*/_jsx(ScrollableList,{scrollKey:\"domain_blocks\",onLoadMore:this.handleLoadMore,hasMore:hasMore,emptyMessage:emptyMessage},void 0,domains.map(domain=>/*#__PURE__*/_jsx(DomainContainer,{domain:domain},domain))));}},_defineProperty(_class2,\"propTypes\",{params:PropTypes.object.isRequired,dispatch:PropTypes.func.isRequired,hasMore:PropTypes.bool,domains:ImmutablePropTypes.orderedSet,intl:PropTypes.object.isRequired}),_temp))||_class)||_class);export{Blocks as default};","import _jsx from\"@babel/runtime/helpers/esm/jsx\";import React from'react';import{defineMessages,injectIntl,FormattedMessage}from'react-intl';import{connect}from'react-redux';import{blockDomain,unblockDomain}from'../actions/domain_blocks';import{openModal}from'../actions/modals';import Domain from'../components/domain';const messages=defineMessages({blockDomainConfirm:{\"id\":\"confirmations.domain_block.confirm\",\"defaultMessage\":\"Hide entire domain\"}});const makeMapStateToProps=()=>{const mapStateToProps=()=>({});return mapStateToProps;};const mapDispatchToProps=(dispatch,{intl})=>({onBlockDomain(domain){dispatch(openModal('CONFIRM',{icon:require('@tabler/icons/icons/ban.svg'),heading:/*#__PURE__*/_jsx(FormattedMessage,{id:\"confirmations.domain_block.heading\",defaultMessage:\"Block {domain}\",values:{domain}}),message:/*#__PURE__*/_jsx(FormattedMessage,{id:\"confirmations.domain_block.message\",defaultMessage:\"Are you really, really sure you want to block the entire {domain}? In most cases a few targeted blocks or mutes are sufficient and preferable.\",values:{domain:/*#__PURE__*/_jsx(\"strong\",{},void 0,domain)}}),confirm:intl.formatMessage(messages.blockDomainConfirm),onConfirm:()=>dispatch(blockDomain(domain))}));},onUnblockDomain(domain){dispatch(unblockDomain(domain));}});export default injectIntl(connect(makeMapStateToProps,mapDispatchToProps)(Domain));"],"names":["_class","_class2","_temp","messages","unblockDomain","Account","injectIntl","args","props","onUnblockDomain","domain","render","this","intl","className","active","src","title","formatMessage","onClick","handleDomainUnblock","blockDomainConfirm","dispatch","onBlockDomain","icon","heading","id","defaultMessage","values","message","confirm","onConfirm","Blocks","state","domains","getIn","hasMore","_dec","leading","componentDidMount","emptyMessage","scrollKey","onLoadMore","handleLoadMore","map","params"],"sourceRoot":""}